#cloud-config

write_files:
  - content: |
      - name: install mysql
        hosts: 127.0.0.1
        pre_tasks:
          - name: install curl
            package: name=curl
          - name: install percona mysql repo
            shell: curl -O https://repo.percona.com/apt/percona-release_0.1-4.$(lsb_release -sc)_all.deb && dpkg -i percona-release_0.1-4.$(lsb_release -sc)_all.deb
            args:
              creates: /etc/apt/sources.list.d/percona-release.list
              executable: /bin/bash
              chdir: /tmp
          - name: refresh apt cache
            apt:
              update_cache: yes
          - name: create /etc/mysql
            file: path=/etc/mysql state=directory
          - name: add custom mysql config file
            copy:
              dest: custom.cnf
              content: |
                [mysqld]
                enforce_gtid_consistency        = ON
                gtid_mode                       = ON
                report-host                     = ${hostname}.node.${consul_datacenter}.consul
                log-slave-updates               = 1
                relay_log_info_repository       = TABLE
                master_info_repository          = TABLE
        roles:
          - role: entercloudsuite.mysql
            mysql_root_username: ${mysql_root_name}
            mysql_root_password: ${mysql_root_password}
            mysql_packages:
              - percona-server-server-5.7
              - percona-xtrabackup-24
        post_tasks:
          - name: create mysql admin ${mysql_admin_name}
            mysql_user:
              name: ${mysql_admin_name}
              host: '%'
              password: ${mysql_admin_password}
              priv: '*.*:ALL,GRANT'

    path: /tmp/cloud/playbook.yml
    permissions: '0400'

  - content: |
      - src: entercloudsuite.mysql
        version: 1.0.0
    path: /tmp/cloud/requirements.yml
    permissions: '0400'

  - content: |
      ansible==2.5.1
      asn1crypto==0.23.0
      bcrypt==3.1.4
      cffi==1.11.2
      cryptography==2.1.3
      enum34==1.1.6
      idna==2.6
      ipaddress==1.0.18
      Jinja2==2.10
      MarkupSafe==1.0
      paramiko==2.4.0
      pyasn1==0.3.7
      pycparser==2.18
      pycrypto==2.6.1
      PyNaCl==1.2.0
      PyYAML==3.12
      six==1.11.0
      jmespath==0.9.3
    path: /tmp/cloud/requirements.txt
    permissions: '0400'

runcmd:
  - |
      bash <<'EOF'
      export COMPLETED=false
      while [ "$COMPLETED" == "false" ]; do
        (
          set -e errexit
          set -o pipefail
          # workaround https://github.com/ansible/ansible/issues/21562
          export HOME=/root
          cd /tmp/cloud
          rm -rf bin local share roles include lib || true
          dpkg-query -l libffi-dev || ( apt update -y && apt install libffi-dev -y )
          dpkg-query -l libssl-dev || ( apt update -y && apt install libssl-dev -y )
          test -e /usr/bin/python || ( apt update -y && apt install python-minimal -y )
          test -e /usr/bin/pip || ( apt update -y && apt install python-pip -y )
          test -e /usr/bin/virtualenv || ( apt update -y && apt install virtualenv -y )
          virtualenv .
          source bin/activate
          pip install -r requirements.txt
          mkdir roles || true
          ansible-galaxy install -f -p roles -r requirements.yml
          ansible-playbook -e ansible_python_interpreter=/usr/bin/python --connection=local playbook.yml
        ) >> /var/log/cloud-scripts.log 2>&1
        if [ $? == 0 ]; then
          COMPLETED=true
        fi
        sleep 1
      done
      EOF
