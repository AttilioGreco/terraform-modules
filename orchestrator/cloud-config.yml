#cloud-config

write_files:
  - content: |
      - name: install orchestrator
        hosts: 127.0.0.1
        vars:
          orchestrator_http_auth_basic: '${orchestrator_http_auth_user}:${orchestrator_http_auth_password}'
        pre_tasks:
          - name: download fixed orchestrator bin https://github.com/github/orchestrator/pull/599
            get_url:
              url: https://swift.it-mil1.entercloudsuite.com/v1/KEY_d51f5387474f40c6bd2975ccf34c7ea0/orchestratorbin/orchestrator
              dest: "/usr/local/bin/orchestrator"
              mode: 0540
              force: yes
        roles:
          - role: entercloudsuite.orchestrator
            orchestrator_mysql_user: orchestrator
            orchestrator_mysql_password: orchestrator
            orchestrator_mysql_topology_user: orchestrator_${orchestrator_user}
            orchestrator_mysql_topology_password: ${orchestrator_password}
            orchestrator_read_only: false
            orchestrator_super_read_only: true
            orchestrator_mysql_compatible_version:
            orchestrator_listen_address: :${orchestrator_service_port}
            orchestrator_kv_consul_address: ${consul}:${consul_port}
            orchestrator_recover_master_cluster_filters: ["*"]
            orchestrator_recover_intermediate_master_cluster_filters: ["*"]
            orchestrator_master_failover_lost_instances_downtime_minutes: 1
            orchestrator_failure_detection_period_block_minutes: 1
            orchestrator_recovery_period_block_seconds: 30
            orchestrator_detect_cluster_domain_query:
            orchestrator_detect_datacenter_query:
            orchestrator_replication_lag_query:
            orchestrator_pseudo_gtid_pattern:
            orchestrator_detect_pseudo_gtid_query:
            orchestrator_authentication_method: ${orchestrator_authentication_method}
            orchestrator_http_auth_user: ${orchestrator_http_auth_user}
            orchestrator_http_auth_password: ${orchestrator_http_auth_password}
            orchestrator_url_prefix:
            orchestrator_raft_enabled: ${orchestrator_raft_enabled}
            orchestrator_raft_data_dir: "${orchestrator_raft_data_dir}"
            orchestrator_raft_bind: "{{ ansible_default_ipv4.address }}"
            orchestrator_raft_default_port: ${orchestrator_raft_default_port}
            orchestrator_raft_nodes: ${orchestrator_raft_nodes}
          - role: entercloudsuite.haproxy
            haproxy_user: ${orchestrator_user}
            haproxy_pass: ${orchestrator_password}
            haproxy_conf: |
              listen orchestrator
                  bind  *:${orchestrator_port}
                  mode tcp
                  option httpchk GET /api/leader-check HTTP/1.0\r\nAuthorization:\ Basic\ {{ orchestrator_http_auth_basic | b64encode }}
                  balance first
                  retries 1
                  timeout connect 1000
                  timeout check 300
                  timeout server 30s
                  timeout client 30s
                  default-server port 3000 fall 1 inter 1000 rise 1 downinter 1000 on-marked-down shutdown-sessions weight 10 init-addr none
                  server ${name}-0 ${name}-0.node.${consul_datacenter}.consul:${orchestrator_service_port} check
                  server ${name}-1 ${name}-1.node.${consul_datacenter}.consul:${orchestrator_service_port} check
                  server ${name}-2 ${name}-2.node.${consul_datacenter}.consul:${orchestrator_service_port} check
          - role: entercloudsuite.consul
            consul_config_validate: "{{ consul_user_home }}/bin/consul validate -config-format=json %s"
            consul_configs:
              main:
                bind_addr: 0.0.0.0
                client_addr: 0.0.0.0
                node_name: "{{ ansible_hostname }}"
                data_dir: "{{ consul_data_dir }}"
                encrypt: "${consul_encrypt}"
                datacenter: "${consul_datacenter}"
                enable_syslog: true
                server: false
                ui: true
                enable_script_checks: true
                services:
                  - name: "${name}"
                    checks:
                      - http: "http://${orchestrator_user}:${orchestrator_password}@127.0.0.1:8282"
                        method: "GET"
                        interval: "10s"
                rejoin_after_leave: true
                retry_join:
                  - "${consul}"
            when: ("${consul}" != "")

    path: /usr/src/cloud/playbook.yml
    permissions: '0400'

runcmd:
  - |
      bash <<'EOF'
      export COMPLETED=false
      while [ "$COMPLETED" == "false" ]; do
        (
          set -e errexit
          set -o pipefail
          # workaround https://github.com/ansible/ansible/issues/21562
          export HOME=/root
          cd /usr/src/cloud
          source venv/bin/activate
          ansible-playbook -e ansible_python_interpreter=/usr/bin/python --connection=local playbook.yml
        ) >> /var/log/cloud-scripts.log 2>&1
        if [ $? == 0 ]; then
          COMPLETED=true
        fi
        sleep 1
      done
      EOF
