#cloud-config

write_files:

  - content: |
      docker==3.5.0
      ansible==2.6.2
      asn1crypto==0.23.0
      bcrypt==3.1.4
      cffi==1.11.2
      cryptography==2.1.3
      enum34==1.1.6
      idna==2.6
      ipaddress==1.0.18
      Jinja2==2.10
      MarkupSafe==1.0
      paramiko==2.4.0
      pyasn1==0.3.7
      pycparser==2.18
      pycrypto==2.6.1
      PyNaCl==1.2.0
      PyYAML==3.12
      six==1.11.0
      jmespath==0.9.3
    path: /tmp/requirements.txt
    permissions: '0400'

  - content: |
      - hosts: localhost
        tasks:
          - name: Run database container
            docker_container:
              name: 'db'
              image: 'mariadb'
              state: 'started'
              network_mode: "host"
              ports:
                - "3306:3306"
              env:
                MYSQL_ROOT_PASSWORD: '${db_password}'
          - name: Run Wordpress container
            docker_container:
              name: 'wp'
              image: 'wordpress'
              state: 'started'
              network_mode: "host"
              ports:
                - "80:80"
              env:
                WORDPRESS_DB_HOST: '127.0.0.1'
                WORDPRESS_DB_PASSWORD: '${db_password}'

    path: /tmp/playbook.yml
    permissions: '0400'

runcmd:
  - |
      bash <<'EOF'
      export COMPLETED=false
      while [ "$COMPLETED" == "false" ]; do
        (
          set -e errexit
          set -o pipefail
          # workaround https://github.com/ansible/ansible/issues/21562
          export HOME=/root
          cd /tmp/
          rm -rf bin local share roles include lib || true
          dpkg-query -l libffi-dev || ( apt update -y && apt install libffi-dev -y )
          dpkg-query -l libssl-dev || ( apt update -y && apt install libssl-dev -y )
          test -e /usr/bin/python || ( apt update -y && apt install python-minimal -y )
          test -e /usr/bin/pip || ( apt update -y && apt install python-pip -y )
          test -e /usr/bin/virtualenv || ( apt update -y && apt install virtualenv -y )
          pip install -r /tmp/requirements.txt
          virtualenv .
          source bin/activate
          pip install -r /tmp/requirements.txt
          ansible-playbook -e ansible_python_interpreter=/usr/bin/python --connection=local playbook.yml
        ) >> /var/log/cloud-scripts.log 2>&1
        if [ $? == 0 ]; then
          COMPLETED=true
        fi
        sleep 1
      done
      EOF
